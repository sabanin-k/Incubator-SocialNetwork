{"version":3,"file":"static/js/56.8fbbe99e.chunk.js","mappings":"uLAEaA,EAAU,SAACC,GAAD,OAAwBA,EAAMC,SAASC,MACjDC,EAAgB,SAACH,GAAD,OAAyBA,EAAMC,SAASG,YACxDC,EAAgB,SAACL,GAAD,OAAyBA,EAAMC,SAASK,Y,oBCHrE,GAAgB,YAAc,0BAA0B,KAAO,mBAAmB,IAAM,kBAAkB,QAAU,sBAAsB,aAAe,2BAA2B,YAAc,2B,SCmDlM,EA9CyB,SAAC,GAAsC,IAApCJ,EAAmC,EAAnCA,KAAMI,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACpCC,EAAc,SAACC,GACjB,OACI,uBAAIA,KAINC,EAAgB,SAACC,EAAYF,EAAiBG,GAChD,OACI,iCACI,iBAAMC,UAAWC,EAAAA,YAAoBC,QAAS,SAACC,GAC3CA,EAAMC,iBACNV,EAAWI,IAFf,SAGIC,IACHJ,EAAYC,OAKzB,OACI,iCACI,oBAASI,UAAWC,EAAAA,YAApB,SACKZ,EAAKgB,KAAI,SAAAC,GACN,OACI,eAAuBC,KAAMD,EAAKE,KAAMR,UAAWC,EAAAA,KAAaQ,OAAO,SAASC,IAAI,aAApF,WAEI,gBAAKC,IAAKL,EAAKM,WAAaC,EAAWC,IAAI,OAAOd,UAAWC,EAAAA,OAE7D,iBAAKD,UAAWC,EAAAA,QAAhB,WACI,cAAGD,UAAWC,EAAAA,OAAd,SAA8BK,EAAKS,SACnC,iBAAMf,UAAWC,EAAAA,aAAjB,SAAuCK,EAAKU,WAC5C,gBAAKhB,UAAWC,EAAAA,QAAhB,SAC0B,OAArBK,EAAKW,cAA0BxB,EAAWyB,SAASZ,EAAKE,MAEnDX,EAAcS,EAAKE,KAAMF,EAAKW,YAAa,wCAD3CpB,EAAcS,EAAKE,KAAM,GAAI,4DATvCW,KAAKC,gBAkBzB,SAACC,EAAA,EAAD,QChBZ,GAAeC,EAAAA,EAAAA,KANS,SAACnC,GAAD,MAAY,CAChCE,KAAMH,EAAQC,GACdI,WAAYD,EAAcH,GAC1BM,WAAYD,EAAcL,MAGU,CAAEoC,aAAAA,EAAAA,GAAc7B,WAAAA,EAAAA,IAAxD,EAxBkC,SAAC,GAAgE,IAA9D6B,EAA6D,EAA7DA,aAAchC,EAA+C,EAA/CA,WAAYF,EAAmC,EAAnCA,KAAMI,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAM7E,OALA8B,EAAAA,EAAAA,YAAU,WACND,MAED,KAGC,8BACKhC,GACK,SAACkC,EAAA,EAAD,KACA,SAAC,EAAD,CACEpC,KAAMA,EACNI,WAAYA,EACZC,WAAYA,U","sources":["store/selectors/newsSelector.ts","webpack://kamas/./src/pages/News/News.module.css?f02f","pages/News/News.tsx","pages/News/NewsContainer.tsx"],"sourcesContent":["import { TGlobalState } from \"../reduxStore\";\r\n\r\nexport const getNews = (state: TGlobalState)=> state.newsPage.news;\r\nexport const getIsFetching = (state: TGlobalState) => state.newsPage.isFetching;\r\nexport const getHasContent = (state: TGlobalState) => state.newsPage.hasContent;","// extracted by mini-css-extract-plugin\nexport default {\"newsSection\":\"News_newsSection__+5GiB\",\"link\":\"News_link__0Jp5K\",\"img\":\"News_img__rWrEk\",\"textDiv\":\"News_textDiv__S0MsK\",\"calendarData\":\"News_calendarData__tvUt8\",\"contentSpan\":\"News_contentSpan__Eh7lW\"};","import React, { FC } from \"react\";\r\nimport { TNews } from \"../../api/newsAPI\";\r\nimport newspaper from \"../../assets/images/newspaper.png\";\r\nimport { UpButton } from \"../../components/common/UpButton/UpButton\";\r\nimport styles from \"./News.module.css\";\r\n\r\nconst News: FC<TProps> = ({ news, hasContent, getContent }) => {\r\n    const showContent = (content: string) => {\r\n        return (\r\n            <p>{content}</p>\r\n        )\r\n    }\r\n\r\n    const toggleContent = (id: string, content: string, text: string) => {\r\n        return (\r\n            <>\r\n                <span className={styles.contentSpan} onClick={(event) => {\r\n                    event.preventDefault();\r\n                    getContent(id)\r\n                }}>{text}</span>\r\n                {showContent(content)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className={styles.newsSection}>\r\n                {news.map(item => {\r\n                    return (\r\n                        <a key={Math.random()} href={item.link} className={styles.link} target='_blank' rel='noreferrer'>\r\n                            {/* <div className={styles.imgDiv}> */}\r\n                            <img src={item.image_url || newspaper} alt=\"news\" className={styles.img} />\r\n                            {/* </div> */}\r\n                            <div className={styles.textDiv}>\r\n                                <p className={styles.phrase}>{item.title}</p>\r\n                                <span className={styles.calendarData}>{item.pubDate}</span>\r\n                                <div className={styles.content}>\r\n                                    {item.description !== null && (!hasContent.includes(item.link)\r\n                                        ? toggleContent(item.link, '', 'Показать')\r\n                                        : toggleContent(item.link, item.description, 'Убрать'))}\r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    )\r\n                })}\r\n            </section>\r\n            <UpButton />\r\n        </>)\r\n}\r\n\r\nexport default News;\r\n\r\n\r\ntype TProps = {\r\n    news: TNews[]\r\n    hasContent: string[]\r\n    getContent: (id: string) => void\r\n}","import React, { FC, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TNews } from \"../../api/newsAPI\";\r\nimport { Preloader } from \"../../components/common/Preloader/Preloader\";\r\nimport { getContent, getNewsThunk } from '../../store/reducers/newsReducer';\r\nimport { getHasContent, getIsFetching, getNews } from \"../../store/selectors/newsSelector\";\r\nimport News from './News';\r\n\r\nconst NewsContainer: FC<TProps> = ({ getNewsThunk, isFetching, news, hasContent, getContent }) => {\r\n    useEffect(() => {\r\n        getNewsThunk()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isFetching\r\n                ? <Preloader />\r\n                : <News\r\n                    news={news}\r\n                    hasContent={hasContent}\r\n                    getContent={getContent} />}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    news: getNews(state),\r\n    isFetching: getIsFetching(state),\r\n    hasContent: getHasContent(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, { getNewsThunk, getContent })(NewsContainer);\r\n\r\n\r\ntype TProps = {\r\n    isFetching: boolean\r\n    news: TNews[]\r\n    hasContent: string[]\r\n    getContent: () => void\r\n    getNewsThunk: () => void\r\n}"],"names":["getNews","state","newsPage","news","getIsFetching","isFetching","getHasContent","hasContent","getContent","showContent","content","toggleContent","id","text","className","styles","onClick","event","preventDefault","map","item","href","link","target","rel","src","image_url","newspaper","alt","title","pubDate","description","includes","Math","random","UpButton","connect","getNewsThunk","useEffect","Preloader"],"sourceRoot":""}