{"version":3,"file":"static/js/916.f331ae51.chunk.js","mappings":"oMACA,GAAgB,YAAc,0BAA0B,KAAO,mBAAmB,IAAM,kBAAkB,QAAU,sBAAsB,aAAe,2BAA2B,YAAc,2B,SCmDlM,EA9CyB,SAAC,GAAsC,IAApCA,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACpCC,EAAc,SAACC,GACjB,OACI,uBAAIA,KAINC,EAAgB,SAACC,EAAYF,EAAiBG,GAChD,OACI,iCACI,iBAAMC,UAAWC,EAAAA,YAAoBC,QAAS,SAACC,GAC3CA,EAAMC,iBACNV,EAAWI,IAFf,SAGIC,IACHJ,EAAYC,OAKzB,OACI,iCACI,oBAASI,UAAWC,EAAAA,YAApB,SACKT,EAAKa,KAAI,SAAAC,GACN,OACI,eAAuBC,KAAMD,EAAKE,IAAKR,UAAWC,EAAAA,KAAaQ,OAAO,SAASC,IAAI,aAAnF,WAEI,gBAAKC,IAAKL,EAAKM,YAAcC,EAAWC,IAAI,OAAOC,MAAM,QAAQf,UAAWC,EAAAA,OAE5E,iBAAKD,UAAWC,EAAAA,QAAhB,WACI,cAAGD,UAAWC,EAAAA,OAAd,SAA8BK,EAAKU,SACnC,iBAAMhB,UAAWC,EAAAA,aAAjB,SAAuCK,EAAKW,eAC5C,gBAAKjB,UAAWC,EAAAA,QAAhB,SAC0B,OAArBK,EAAKY,cAA0BzB,EAAW0B,SAASb,EAAKE,KAEnDX,EAAcS,EAAKE,IAAKF,EAAKY,YAAa,wCAD1CrB,EAAcS,EAAKE,IAAK,GAAI,4DATtCY,KAAKC,gBAkBzB,SAACC,EAAA,EAAD,Q,SC9CCC,EAAU,SAACC,GAAD,OAAwBA,EAAMC,SAASjC,MACjDkC,EAAgB,SAACF,GAAD,OAAyBA,EAAMC,SAASE,YACxDC,EAAgB,SAACJ,GAAD,OAAyBA,EAAMC,SAAShC,YC2BrE,GAAeoC,EAAAA,EAAAA,KANS,SAACL,GAAD,MAAY,CAChChC,KAAM+B,EAAQC,GACdG,WAAYD,EAAcF,GAC1B/B,WAAYmC,EAAcJ,MAGU,CAAEM,aAAAA,EAAAA,GAAcpC,WAAAA,EAAAA,IAAxD,EAvBkC,SAAC,GAAgE,IAA9DoC,EAA6D,EAA7DA,aAAcH,EAA+C,EAA/CA,WAAYnC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAM7E,OALAqC,EAAAA,EAAAA,YAAU,WACND,MAED,KAGC,gCACKH,IAAc,SAACK,EAAA,EAAD,KACf,SAAC,EAAD,CACIxC,KAAMA,EACNC,WAAYA,EACZC,WAAYA,W","sources":["webpack://kamas/./src/components/News/News.module.css?fa32","components/News/News.tsx","store/selectors/newsSelector.ts","components/News/NewsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"newsSection\":\"News_newsSection__mJ-kv\",\"link\":\"News_link__vneP8\",\"img\":\"News_img__cJ3Fb\",\"textDiv\":\"News_textDiv__1Yhzy\",\"calendarData\":\"News_calendarData__gaeqn\",\"contentSpan\":\"News_contentSpan__F01LR\"};","import React, { FC } from \"react\";\r\nimport { TArticle } from \"../../api/apiNews\";\r\nimport newspaper from \"../../assets/images/newspaper.png\";\r\nimport {UpButton} from \"../common/UpButton/UpButton\";\r\nimport styles from \"./News.module.css\";\r\n\r\nconst News: FC<TProps> = ({ news, hasContent, getContent }) => {\r\n    const showContent = (content: string) => {\r\n        return (\r\n            <p>{content}</p>\r\n        )\r\n    }\r\n\r\n    const toggleContent = (id: string, content: string, text: string) => {\r\n        return (\r\n            <>\r\n                <span className={styles.contentSpan} onClick={(event) => {\r\n                    event.preventDefault();\r\n                    getContent(id)\r\n                }}>{text}</span>\r\n                {showContent(content)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className={styles.newsSection}>\r\n                {news.map(item => {\r\n                    return (\r\n                        <a key={Math.random()} href={item.url} className={styles.link} target='_blank' rel='noreferrer'>\r\n                            {/* <div className={styles.imgDiv}> */}\r\n                            <img src={item.urlToImage || newspaper} alt=\"news\" width='200px' className={styles.img} />\r\n                            {/* </div> */}\r\n                            <div className={styles.textDiv}>\r\n                                <p className={styles.phrase}>{item.title}</p>\r\n                                <span className={styles.calendarData}>{item.publishedAt}</span>\r\n                                <div className={styles.content}>\r\n                                    {item.description !== null && (!hasContent.includes(item.url)\r\n                                        ? toggleContent(item.url, '', 'Показать')\r\n                                        : toggleContent(item.url, item.description, 'Убрать'))}\r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    )\r\n                })}\r\n            </section>\r\n            <UpButton />\r\n        </>)\r\n}\r\n\r\nexport default News;\r\n\r\n\r\ntype TProps = {\r\n    news: TArticle[]\r\n    hasContent: string[]\r\n    getContent: (id: string) => void\r\n}","import { TGlobalState } from \"../reduxStore\";\r\n\r\nexport const getNews = (state: TGlobalState)=> state.newsPage.news;\r\nexport const getIsFetching = (state: TGlobalState) => state.newsPage.isFetching;\r\nexport const getHasContent = (state: TGlobalState) => state.newsPage.hasContent;","import React, { FC, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getNewsThunk, getContent } from '../../store/reducers/newsReducer';\r\nimport News from './News';\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport { getHasContent, getIsFetching, getNews } from \"../../store/selectors/newsSelector\";\r\nimport { TArticle } from \"../../api/apiNews\";\r\n\r\nconst NewsContainer: FC<TProps> = ({ getNewsThunk, isFetching, news, hasContent, getContent }) => {\r\n    useEffect(() => {\r\n        getNewsThunk()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {isFetching && <Preloader />}\r\n            <News\r\n                news={news}\r\n                hasContent={hasContent}\r\n                getContent={getContent} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    news: getNews(state),\r\n    isFetching: getIsFetching(state),\r\n    hasContent: getHasContent(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, { getNewsThunk, getContent })(NewsContainer);\r\n\r\n\r\ntype TProps = {\r\n    isFetching: boolean\r\n    news: TArticle[]\r\n    hasContent: string[]\r\n    getContent: () => void\r\n    getNewsThunk: () => void\r\n}"],"names":["news","hasContent","getContent","showContent","content","toggleContent","id","text","className","styles","onClick","event","preventDefault","map","item","href","url","target","rel","src","urlToImage","newspaper","alt","width","title","publishedAt","description","includes","Math","random","UpButton","getNews","state","newsPage","getIsFetching","isFetching","getHasContent","connect","getNewsThunk","useEffect","Preloader"],"sourceRoot":""}