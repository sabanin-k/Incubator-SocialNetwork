{"version":3,"file":"static/js/577.4a48be01.chunk.js","mappings":"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","sources":["store/selectors/newsSelector.ts","webpack://kamas/./src/pages/News/NewsCategories/NewsCategories.module.css?6f95","pages/News/NewsCategories/NewsCategories.tsx","webpack://kamas/./src/pages/News/News.module.css?f02f","pages/News/News.tsx","pages/News/NewsContainer.tsx"],"sourcesContent":["import { TGlobalState } from \"../reduxStore\";\r\n\r\nexport const getNews = (state: TGlobalState)=> state.newsPage.news;\r\nexport const getIsFetching = (state: TGlobalState) => state.newsPage.isFetching;\r\nexport const getHasContent = (state: TGlobalState) => state.newsPage.hasContent;\r\nexport const getNextPageSelector = (state: TGlobalState) => state.newsPage.nextPage\r\nexport const getScrollFetchingSelector = (state: TGlobalState) => state.newsPage.scrollFetching\r\nexport const getCategoriesSelector = (state: TGlobalState) => state.newsPage.catregories","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"NewsCategories_wrapper__Snjmy\",\"active\":\"NewsCategories_active__djkjw\",\"disactive\":\"NewsCategories_disactive__W8Brb\"};","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { actionCreators } from '../../../store/reducers/newsReducer'\r\nimport { getCategoriesSelector } from '../../../store/selectors/newsSelector'\r\nimport styles from './NewsCategories.module.css'\r\n\r\nexport const NewsCategories = () => {\r\n    const dispatch = useDispatch()\r\n    const categoriesRedux = useSelector(getCategoriesSelector)\r\n    const [categories, setCategories] = useState(categoriesRedux)\r\n    const [sport, setSport] = useState(false)\r\n    const [techno, setTechno] = useState(true)\r\n    const [top, setTop] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(actionCreators.setCategories(categories))\r\n    }, [categories, dispatch])\r\n\r\n    const handleSportClick = () => {\r\n        setCategories([...categories, 'sports'])\r\n        setSport(true)\r\n    }\r\n    const handleAntiSportClick = () => {\r\n        if (categoriesRedux.length !== 1) {\r\n            setCategories(categories.filter(c => c !== 'sports'))\r\n            setSport(false)\r\n        }\r\n    }\r\n\r\n    const handleTechnoClick = () => {\r\n        setCategories([...categories, 'technology'])\r\n        setTechno(true)\r\n    }\r\n    const handleAntiTechnoClick = () => {\r\n        if (categoriesRedux.length !== 1) {\r\n            setCategories(categories.filter(c => c !== 'technology'))\r\n            setTechno(false)\r\n        }\r\n    }\r\n\r\n    const handleTopClick = () => {\r\n        setCategories([...categories, 'top'])\r\n        setTop(true)\r\n    }\r\n    const handleAntiTopClick = () => {\r\n        if (categoriesRedux.length !== 1) {\r\n            setCategories(categories.filter(c => c !== 'top'))\r\n            setTop(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {!sport\r\n                ? <div onClick={handleSportClick} className={styles.disactive}>Спорт</div>\r\n                : <div onClick={handleAntiSportClick} className={styles.active}>Спорт</div>}\r\n            {!techno\r\n                ? <div onClick={handleTechnoClick} className={styles.disactive}>Технологии</div>\r\n                : <div onClick={handleAntiTechnoClick} className={styles.active}>Технологии</div>}\r\n            {!top\r\n                ? <div onClick={handleTopClick} className={styles.disactive}>Общие</div>\r\n                : <div onClick={handleAntiTopClick} className={styles.active}>Общие</div>}\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"newsSection\":\"News_newsSection__+5GiB\",\"link\":\"News_link__0Jp5K\",\"img\":\"News_img__rWrEk\",\"imgPlug\":\"News_imgPlug__-C6VJ\",\"textDiv\":\"News_textDiv__S0MsK\",\"calendarData\":\"News_calendarData__tvUt8\",\"contentSpan\":\"News_contentSpan__Eh7lW\"};","import React, { FC, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TNews } from \"../../api/newsAPI\";\r\nimport { UpButton } from \"../../components/common/UpButton/UpButton\";\r\nimport { actionCreators } from \"../../store/reducers/newsReducer\";\r\nimport { NewsCategories } from \"./NewsCategories/NewsCategories\";\r\nimport newsImage from \"../../assets/images/news.png\";\r\nimport styles from \"./News.module.css\";\r\n\r\nconst News: FC<TProps> = ({ news, hasContent, getContent }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const scrollHandler = (e: any ) => {\r\n        if (e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 200) {\r\n            dispatch(actionCreators.setScrollFetching(true))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', scrollHandler)\r\n        return () => document.removeEventListener('scroll', scrollHandler)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const showContent = (content: string) => {\r\n        return (\r\n            <p>{content}</p>\r\n        )\r\n    }\r\n\r\n    const toggleContent = (id: string, content: string, text: string) => {\r\n        return (\r\n            <>\r\n                <span className={styles.contentSpan} onClick={(event) => {\r\n                    event.preventDefault();\r\n                    getContent(id)\r\n                }}>{text}</span>\r\n                {showContent(content)}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className={styles.newsSection}>\r\n                <NewsCategories />\r\n                {news.map(item => {\r\n                    return (\r\n                        <a key={item.link} href={item.link} className={styles.link} target='_blank' rel='noreferrer'>\r\n                            {item.image_url !== null\r\n                            ? <img src={item.image_url} alt=\"news\" className={styles.img} />\r\n                            : <img src={newsImage} alt=\"news\" className={styles.imgPlug} />}\r\n                            <div className={styles.textDiv}>\r\n                                <p className={styles.phrase}>{item.title}</p>\r\n                                <span className={styles.calendarData}>{item.pubDate.slice(0, item.pubDate.length - 3)}</span>\r\n                                <div className={styles.content}>\r\n                                    {item.description !== null && (!hasContent.includes(item.link)\r\n                                        ? toggleContent(item.link, '', 'Показать')\r\n                                        : toggleContent(item.link, item.description, 'Убрать'))}\r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    )\r\n                })}\r\n            </section>\r\n            <UpButton />\r\n        </>)\r\n}\r\n\r\nexport default News;\r\n\r\n\r\ntype TProps = {\r\n    news: TNews[]\r\n    hasContent: string[]\r\n    getContent: (id: string) => void\r\n}","import React, { FC, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { TCategory, TNews } from \"../../api/newsAPI\";\r\nimport { Preloader } from \"../../components/common/Preloader/Preloader\";\r\nimport { getContent, getNewsByCategory, getNewsThunk } from '../../store/reducers/newsReducer';\r\nimport { TGlobalState } from \"../../store/reduxStore\";\r\nimport { getCategoriesSelector, getHasContent, getIsFetching, getNews, getNextPageSelector, getScrollFetchingSelector } from \"../../store/selectors/newsSelector\";\r\nimport News from './News';\r\n\r\nconst NewsContainer: FC<TProps> = ({ getNewsThunk, getNewsByCategory, isFetching, news, hasContent, getContent, nextPage, scrollFetching, categories }) => {\r\n    useEffect(() => {\r\n        if (scrollFetching) {\r\n            getNewsThunk(nextPage, categories)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [scrollFetching])\r\n\r\n    useEffect(() => {\r\n        getNewsByCategory(categories)\r\n    }, [categories, getNewsByCategory])\r\n\r\n    return (\r\n        <>\r\n            {isFetching\r\n                ? <Preloader />\r\n                : <News\r\n                    news={news}\r\n                    hasContent={hasContent}\r\n                    getContent={getContent} />}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: TGlobalState) => ({\r\n    news: getNews(state),\r\n    isFetching: getIsFetching(state),\r\n    hasContent: getHasContent(state),\r\n    nextPage: getNextPageSelector(state),\r\n    scrollFetching: getScrollFetchingSelector(state),\r\n    categories: getCategoriesSelector(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, { getNewsThunk, getContent, getNewsByCategory })(NewsContainer);\r\n\r\n\r\ntype TProps = {\r\n    isFetching: boolean\r\n    news: TNews[]\r\n    hasContent: string[]\r\n    nextPage: number\r\n    scrollFetching: boolean\r\n    categories: TCategory[]\r\n    getContent: () => void\r\n    getNewsThunk: (page: number, categories: TCategory[]) => Promise<void>\r\n    getNewsByCategory: (categories: TCategory[]) => Promise<void>\r\n}"],"names":["getNews","state","newsPage","news","getIsFetching","isFetching","getHasContent","hasContent","getNextPageSelector","nextPage","getScrollFetchingSelector","scrollFetching","getCategoriesSelector","catregories","NewsCategories","dispatch","useDispatch","categoriesRedux","useSelector","useState","categories","setCategories","sport","setSport","techno","setTechno","top","setTop","useEffect","actionCreators","className","styles","onClick","length","filter","c","getContent","scrollHandler","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","document","addEventListener","removeEventListener","showContent","content","toggleContent","id","text","event","preventDefault","map","item","href","link","rel","image_url","src","alt","newsImage","title","pubDate","slice","description","includes","UpButton","connect","getNewsThunk","getNewsByCategory","Preloader"],"sourceRoot":""}