{"version":3,"file":"static/js/253.43af0ccd.chunk.js","mappings":"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","sources":["store/selectors/dialogsSelector.ts","webpack://kamas/./src/pages/Dialogs/InputField/InputField.module.css?06c8","pages/Dialogs/InputField/InputField.tsx","webpack://kamas/./src/pages/Dialogs/Messages/Messages.module.css?5db9","pages/Dialogs/Messages/Messages.tsx","webpack://kamas/./src/pages/Dialogs/Opponents/Opponents.module.css?7b07","pages/Dialogs/Opponents/Opponents.tsx","webpack://kamas/./src/pages/Dialogs/Dialogs.module.css?3e4e","pages/Dialogs/Dialogs.tsx"],"sourcesContent":["import { TGlobalState } from \"../reduxStore\";\r\n\r\nexport const getOpponentsSelector = (state: TGlobalState) => state.dialogsPage.opponents\r\nexport const getOpponentMessagesSelector = (state: TGlobalState) => state.dialogsPage.messages\r\nexport const getCurrentOpponentSelector = (state: TGlobalState) => state.dialogsPage.currentOpponent","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"InputField_form__QxXTN\",\"input\":\"InputField_input__T2e-L\",\"button\":\"InputField_button__4qMF7\"};","import { Field, Form, Formik } from \"formik\";\r\nimport React, { FC } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TOpponent } from \"../../../api/dialogsAPI\";\r\nimport { sendMessage } from \"../../../store/reducers/dialogsReducer\";\r\nimport styles from \"./InputField.module.css\";\r\n\r\nexport const InputField: FC<TProps> = ({ currentOpponent }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                textarea: ''\r\n            }}\r\n            onSubmit={(values, { resetForm }) => {\r\n                dispatch(sendMessage(currentOpponent.id, values.textarea))\r\n                resetForm({})\r\n            }}>\r\n            {currentOpponent.id\r\n                && <Form className={styles.form}>\r\n                    <Field\r\n                        type='textarea'\r\n                        name='textarea'\r\n                        placeholder=\"Введите сообщение\"\r\n                        className={styles.input} />\r\n                    <button type='submit' className={styles.button}>Отправить</button>\r\n                </Form>}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n\r\ntype TProps = {\r\n    currentOpponent: TOpponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Messages_wrapper__tZqw2\",\"messageWrapper\":\"Messages_messageWrapper__XLm8t\",\"message\":\"Messages_message__-ZpGn\",\"photo\":\"Messages_photo__YU8Ua\",\"senderName\":\"Messages_senderName__H5XSk\",\"chooseOpponent\":\"Messages_chooseOpponent__OHDo0\"};","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TOpponent, TOpponentMessages } from \"../../../api/dialogsAPI\";\r\nimport userImage from '../../../assets/images/user.png';\r\nimport { TUserProfile } from \"../../../types/types\";\r\nimport styles from './Messages.module.css';\r\n\r\nexport const Messages: FC<TProps> = ({ messages, currentOpponent, authProfile }) => {\r\n\r\n    return <div className={styles.wrapper}>\r\n        {currentOpponent.id\r\n            ? messages.map(m => {\r\n                return <div key={m.id} className={styles.messageWrapper}>\r\n                    <div className={styles.photoWrapper}>\r\n                        <Link to={`/users/${m.senderId}`}>\r\n                            <img\r\n                                src={currentOpponent.id === m.senderId\r\n                                    ? currentOpponent.photos.small || userImage\r\n                                    : authProfile.photos.small || userImage}\r\n                                alt='фото пользователя'\r\n                                width='30px'\r\n                                className={styles.photo}\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <p className={styles.senderName}>{m.senderName}</p>\r\n                        <p className={styles.message}>{m.body}</p>\r\n                    </div>\r\n                </div>\r\n            })\r\n            : <div className={styles.chooseOpponent}>Выберите собеседника</div>}\r\n    </div>\r\n}\r\n\r\n\r\ntype TProps = {\r\n    messages: TOpponentMessages[]\r\n    currentOpponent: TOpponent\r\n    authProfile: TUserProfile\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Opponents_wrapper__hQ2hv\",\"opponent\":\"Opponents_opponent__CR2-s\",\"name\":\"Opponents_name__6c2SM\",\"photo\":\"Opponents_photo__vWuss\"};","import React, { FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TOpponent } from '../../../api/dialogsAPI';\r\nimport { actionCreators, getDialogWithOpponent } from '../../../store/reducers/dialogsReducer';\r\nimport userImage from '../../../assets/images/user.png';\r\nimport styles from './Opponents.module.css';\r\n\r\nexport const Opponents: FC<TProps> = ({ opponents }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = (opponent: TOpponent) => {\r\n        dispatch(getDialogWithOpponent(opponent.id))\r\n        dispatch(actionCreators.setCurrentOpponent(opponent))\r\n    }\r\n\r\n    return <div className={styles.wrapper}>\r\n        {opponents.map(o => {\r\n            return <div key={o.id} onClick={() => handleClick(o)} className={styles.opponent}>\r\n                <img src={o.photos.small || userImage} alt={o.userName} className={styles.photo} width='30px' />\r\n                <p className={styles.name}>{o.userName}</p>\r\n            </div>\r\n        })}\r\n    </div>\r\n}\r\n\r\n\r\ntype TProps = {\r\n    opponents: TOpponent[]\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__pxitv\",\"dialogList\":\"Dialogs_dialogList__oBjP2\",\"messages\":\"Dialogs_messages__bT+pv\"};","import React, { ComponentType, FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport withNavigateToLogin from \"../../hoc/withNavigateToLogin\";\r\nimport { getDialogsOpponents } from \"../../store/reducers/dialogsReducer\";\r\nimport { getUserProfileThunk } from \"../../store/reducers/userProfileReducer\";\r\nimport { getAuthUserId } from \"../../store/selectors/authSelector\";\r\nimport { getCurrentOpponentSelector, getOpponentMessagesSelector, getOpponentsSelector } from \"../../store/selectors/dialogsSelector\";\r\nimport { getUserProfile } from \"../../store/selectors/userProfileSelector\";\r\nimport { InputField } from \"./InputField/InputField\";\r\nimport { Messages } from \"./Messages/Messages\";\r\nimport { Opponents } from \"./Opponents/Opponents\";\r\nimport styles from './Dialogs.module.css';\r\n\r\nconst Dialogs: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const authProfile = useSelector(getUserProfile)\r\n    const currentOpponent = useSelector(getCurrentOpponentSelector)\r\n    const messages = useSelector(getOpponentMessagesSelector)\r\n    const opponents = useSelector(getOpponentsSelector)\r\n    const authId = useSelector(getAuthUserId)\r\n    useEffect(() => {\r\n        dispatch(getDialogsOpponents())\r\n        dispatch(getUserProfileThunk(authId))\r\n    }, [])\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogList}>\r\n                <Opponents opponents={opponents} />\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <Messages messages={messages}\r\n                    currentOpponent={currentOpponent}\r\n                    authProfile={authProfile}\r\n                />\r\n                <InputField currentOpponent={currentOpponent} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose<ComponentType>(\r\n    withNavigateToLogin\r\n)(Dialogs)"],"names":["getOpponentsSelector","state","dialogsPage","opponents","getOpponentMessagesSelector","messages","getCurrentOpponentSelector","currentOpponent","InputField","dispatch","useDispatch","initialValues","textarea","onSubmit","values","resetForm","sendMessage","id","className","styles","type","name","placeholder","Messages","authProfile","map","m","to","senderId","src","photos","small","userImage","alt","width","senderName","body","Opponents","o","onClick","opponent","getDialogWithOpponent","actionCreators","userName","compose","withNavigateToLogin","useSelector","getUserProfile","authId","getAuthUserId","useEffect","getDialogsOpponents","getUserProfileThunk"],"sourceRoot":""}